on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e left join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)));
dplyr::bind_rows(dept, oneDept) %>% tbl_df
oneDept <- dept %>% filter(DEPTNO == 10)
dplyr::bind_rows(dept, oneDept) %>% tbl_df
oneDept
dplyr::bind_cols(dept, emp[1:4,]) %>% tbl_df
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
require("jsonlite")
require("RCurl")
require("dplyr")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
require("ggplot2")
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(X2014_GROSS_PAY_RECEIVED)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = X2014_GROSS_PAY_RECEIVED, y = CURRENT_ANNUAL_SALARY, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(ASSIGNMENT_CATEGORY == "Parttime-Regular") %>% ggplot(aes(x = X2014_GROSS_PAY_RECEIVED, y = CURRENT_ANNUAL_SALARY, color = GENDER)) + geom_point()
a <- df %>% mode(DEPARTMENT)
df %>% mode(DEPARTMENT)
tail(names(sort(table(df$category))), 1)
tail(names(sort(table(df$DEPARTMENT))), 1)
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT == "POL") %>% ggplot(aes(x = X2014_GROSS_PAY_RECEIVED, y = CURRENT_ANNUAL_SALARY, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT == "POL", ) %>% ggplot(aes(x = GENDER, y =  X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT == "POL") %>% ggplot(aes(x = GENDER, y =  X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
tail(names(sort(table(df$DEPARTMENT))), 2)
tail(names(sort(table(df$DEPARTMENT))), 6)
df %>% mutate(common_depts = tail(names(sort(table(df$DEPARTMENT)))), 6) %>% group_by(GENDER, DEPARTMENT)
a = tail(names(sort(table(df$DEPARTMENT))), 6)
a
df %>% mutate(common_depts = tail(names(sort(table(df$DEPARTMENT)))), 6) %>% group_by(GENDER, DEPARTMENT)
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT == "POL") %>% ggplot(aes(x = GENDER, y =  X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_bar()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT == "POL") %>% ggplot(aes(x = GENDER, y =  X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("POL", "COR", "DOT", "FRS", "HHS", "DGS")) %>% ggplot(aes(x = GENDER, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("POL", "COR", "DOT", "FRS", "HHS", "DGS")) %>% ggplot(aes(x = DEPARTMENT, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
a = tail(names(sort(table(df$DEPARTMENT))), 20)
tail(names(sort(table(df$DEPARTMENT))), 20)
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("PIO", "OHR","HCA","CAT","CEC","CCL","REC","FIN","DTS","DEP","SHF","DPS","LIB","DLC","DGS","COR","DOT","FRS" "HHS","POL")) %>% ggplot(aes(x = DEPARTMENT, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("PIO", "OHR","HCA","CAT","CEC","CCL","REC","FIN","DTS","DEP","SHF","DPS","LIB","DLC","DGS","COR","DOT","FRS","HHS","POL")) %>% ggplot(aes(x = DEPARTMENT, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("PIO", "OHR","HCA","CAT","CEC","CCL","REC","FIN","DTS","DEP","SHF","DPS","LIB","DLC","DGS","COR","DOT","FRS","HHS","POL")) %>% ggplot(aes(x = DEPARTMENT, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
require("jsonlite")
require("RCurl")
require("dplyr")
require("ggplot2")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
summary(df)
head(df)
require("jsonlite")
require("RCurl")
require("dplyr")
require("ggplot2")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df %>% group_by(GENDER, DEPARTMENT) %>% summarise(mean_salary = mean(CURRENT_ANNUAL_SALARY)) %>% ggplot(aes(x=DEPARTMENT, y=mean_salary, color=GENDER)) + geom_point()
df %>% mutate(price_percent = cume_dist(X2014_GROSS_PAY_RECEIVED)) %>% filter(DEPARTMENT %in% c("PIO", "OHR","HCA","CAT","CEC","CCL","REC","FIN","DTS","DEP","SHF","DPS","LIB","DLC","DGS","COR","DOT","FRS","HHS","POL")) %>% ggplot(aes(x = DEPARTMENT, y = X2014_GROSS_PAY_RECEIVED, color = GENDER)) + geom_point()
require("jsonlite")
require("RCurl")
require("dplyr")
require("ggplot2")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES__2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require(tidyr)
require(dplyr)
require(ggplot2)
setwd("~/Mine/UT/GitRepositories/DataVisualization/RWorkshop/04 Data ETL (Extract, Transform, and Load) in R/CSVs")
file_path <- "Diamonds.csv"
df <- rename(diamonds, tbl = table) # table is a reserved word in Oracle so rename it to tbl.
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
cat(sql)
measures <- c("carat", "depth", "tbl", "price", "x", "y" , "z")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "Education.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "Education.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970", "High_school_diploma_only_1970", "Some_college_1_3_years_197", "Four_years_of_college_or_higher_1970", "Percent_of_adults_with_less_than_a_high_school_diploma_1970", "Percent_of_adults_with_a_high_school_diploma_only_1970", "Percent_of_adults_completing_some_college_1_3_years_1970", "Percent_of_adults_completing_four_years_of_college_or_higher_1970", "Less_than_a_high_school_diploma_1980", "High_school_diploma_only_1980", "Some_college_1_3_years_1980", "Four_years_of_college_or_higher_1980", "Percent_of_adults_with_less_than_a_high_school_diploma_1980", "Percent_of_adults_with_a_high_school_diploma_only_1980", "Percent_of_adults_completing_some_college_1_3_years_1980", "Percent_of_adults_completing_four_years_of_college_or_higher_1980", "Less_than_a_high_school_diploma_1990","High_school_diploma_only_1990", "Some_college_or_associate_s_degree_1990", "Bachelor_s_degree_or_higher_1990", "Percent_of_adults_with_less_than_a_high_school_diploma_1990", "Percent_of_adults_with_a_high_school_diploma_only_1990", "Percent_of_adults_completing_some_college_or_associate_s_degree_1990", "Percent_of_adults_with_a_bachelor_s_degree_or_higher_1990", "Less_than_a_high_school_diploma_2000", "High_school_diploma_only_2000", "Some_college_or_associate_s_degree_2000", "Bachelor_s_degree_or_higher_2000", "Percent_of_adults_with_less_than_a_high_school_diploma_2000", "Percent_of_adults_with_a_high_school_diploma_only_2000", "Percent_of_adults_completing_some_college_or_associate_s_degree_2000", "Percent_of_adults_with_a_bachelor_s_degree_or_higher_2000", "Less_than_a_high_school_diploma_2009_2013", "High_school_diploma_only_2009_2013", "Some_college_or_associate_s_degree_2009_2013", "Bachelor_s_degree_or_higher_2009_2013", "Percent_of_adults_with_less_than_a_high_school_diploma_2009_2013", "Percent_of_adults_with_a_high_school_diploma_only_2009_2013", "Percent_of_adults_completing_some_college_or_associate_s_degree_2009_2013", "Percent_of_adults_with_a_bachelor_s_degree_or_higher_2009_2013")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
measures <- c("Less_than_a_high_school_diploma_1970", "High_school_diploma_only_1970", "Some_college_1_3_years_197", "Four_years_of_college_or_higher_1970", "Less_than_a_high_school_diploma_1980", "High_school_diploma_only_1980", "Some_college_1_3_years_1980", "Four_years_of_college_or_higher_1980", "Less_than_a_high_school_diploma_1990","High_school_diploma_only_1990", "Some_college_or_associate_s_degree_1990", "Bachelor_s_degree_or_higher_1990", "Less_than_a_high_school_diploma_2000", "High_school_diploma_only_2000", "Some_college_or_associate_s_degree_2000", "Bachelor_s_degree_or_higher_2000", "Less_than_a_high_school_diploma_2009_2013", "High_school_diploma_only_2009_2013", "Some_college_or_associate_s_degree_2009_2013", "Bachelor_s_degree_or_higher_2009_2013")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
summary(df)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
file_path <- "Education.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970")
measures <- c("Less_than_a_high_school_diploma_1970", "High_school_diploma_only_1970", "Some_college_1_3_years_197", "Four_years_of_college_or_higher_1970", "Less_than_a_high_school_diploma_1980", "High_school_diploma_only_1980", "Some_college_1_3_years_1980", "Four_years_of_college_or_higher_1980", "Less_than_a_high_school_diploma_1990","High_school_diploma_only_1990", "Some_college_or_associate_s_degree_1990", "Bachelor_s_degree_or_higher_1990", "Less_than_a_high_school_diploma_2000", "High_school_diploma_only_2000", "Some_college_or_associate_s_degree_2000", "Bachelor_s_degree_or_higher_2000", "Less_than_a_high_school_diploma_2009_2013", "High_school_diploma_only_2009_2013", "Some_college_or_associate_s_degree_2009_2013", "Bachelor_s_degree_or_higher_2009_2013")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970")
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970", "High_school_diploma_only_1970","Some_college_1_3_years_1970","Four_years_of_college_or_higher_1970", "Less_than_a_high_school_diploma_1980")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_high_school_diploma_1970", "High_school_diploma_only_1970","Some_college_1_3_years_1970","Four_years_of_college_or_higher_1970", "Less_than_a_high_school_diploma_1980","High_school_diploma_only_1980", "Some_college_1_3_years_1980", "Four_years_of_college_or_higher_1980", "Less_than_a_high_school_diploma_1990", "High_school_diploma_only_1990", "Some_college_or_associate_s_degree_1990", "Bachelor_s_degree_or_higher_1990", "Less_than_a_high_school_diploma_2000", "High_school_diploma_only_2000", "Some_college_or_associate_s_degree_2000", "Bachelor_s_degree_or_higher_2000", "Less_than_a_high_school_diploma_2009_2013", "High_school_diploma_only_2009_2013", "Some_college_or_associate_s_degree_2009_2013", "Bachelor_s_degree_or_higher_2009_2013")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "test.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Less_than_a_HS_diploma_1970", "HS_diploma_only_1970", "Some_college_1_3_years_1970", "X4_years_of_college_or_more_1970", "Less_than_a_HS_diploma_1980", "HS_diploma_only_1980", "Some_college_1_3_years_1980", "X4_years_of_college_or_more_1980", "Less_than_a_HS_diploma_1990", "HS_diploma_only_1990", "Some_college_or_associate_s_degree_1990", "Bachelor_s_degree_or_more_1990", "Less_than_a_HS_diploma_2000", "HS_diploma_only_2000", "Some_college_or_associate_s_degree_2000", "Bachelor_s_degree_or_more_2000", "Less_than_a_HS_diploma_09_13", "HS_diploma_only_09_13", "Some_college_or_associate_s_degree_09_13", "Bachelor_s_degree_or_more_09_13")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "Unemployment.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
names(df)
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "Unemployment.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject3/01 Data")
file_path <- "Unemployment.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
summary(df)
measures <- c("Civilian_labor_force_2006 Employed_2006", "Unemployed_2006", "Civilian_labor_force_2007",  "Employed_2007", "Unemployed_2007", "Civilian_labor_force_2008", "Employed_2008", "Unemployed_2008",  "Civilian_labor_force_2009", "Employed_2009", "Unemployed_2009", "Civilian_labor_force_2010", "Employed_2010", "Unemployed_2010", "Civilian_labor_force_2011", "Employed_2011", "Unemployed_2011", "Civilian_labor_force_2012", "Employed_2012", "Unemployed_2012", "Civilian_labor_force_2013", "Employed_2013", "Unemployed_2013", "Unemployment_rate_2013", "Civilian_labor_force_2014", "Employed_2014", "Unemployed_2014", "Median_Household_Income_2013")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
